{"version":3,"sources":["../../../src/plugins/uploader/image_uploader.js"],"names":[],"mappings":"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","file":"image_uploader.js","sourcesContent":["/**\n *\n * Updated by uur on 12/01/16.\n */\n\n\"use strict\";\n\nconst Async = require(\"async\");\nconst Sharp = require(\"sharp\");\nconst Tmp = require(\"tmp\");\n\nmodule.exports = (forklift, instance, images, callback) => {\n\n    Async.each(images, (image, eachCallback) => {\n\n        const localFilePath = instance[image[\"schemaKey\"]][\"path\"];\n        const remoteFolder = `images/${image[\"schemaKey\"]}/${instance._id}-`;\n\n        Async.reduce(image.versions, {}, (uploaded, versionContainer, reduceCallback) => {\n\n            const versionKey = Object.keys(versionContainer)[0];\n            const version = versionContainer[versionKey];\n\n            const sharp = Sharp(localFilePath);\n\n            if (version.size[\"width\"] != 0 && version.size[\"height\"] != 0) {\n\n                sharp.resize(version.size[\"width\"], version.size[\"height\"]);\n                if (!version.resize || version.resize == \"!\") {\n                    sharp.ignoreAspectRatio();\n                }\n                else if (version.resize == \">\") {\n                    sharp.max();\n                    sharp.withoutEnlargement();\n                }\n                else if (version.resize == \"<\") {\n                    sharp.min();\n                }\n                else {\n                    return reduceCallback(new Error(`${version.resize} is not valid for ${versionKey}:${image[\"schemaKey\"]}`))\n                }\n            }\n\n            if (!version.output || version.output == \"jpeg\" || version.output == \"jpg\") {\n\n                sharp.background({r: 255, g: 255, b: 255, a: 1});\n                sharp.flatten();\n                sharp.jpeg();\n\n                if (version.quality) {\n                    sharp.quality(version.quality);\n                }\n            }\n            else if (version.output == \"png\") {\n\n                sharp.png();\n            }\n            else {\n                return reduceCallback(new Error(`${version.output} is not valid for ${versionKey}:${image[\"schemaKey\"]}`))\n            }\n\n            sharp.progressive();\n\n            Tmp.file({postfix: \".\" + version.output}, (error, path) => {\n\n                if (error) {\n                    return reduceCallback(error);\n                }\n\n                sharp.toFile(path, (error) => {\n\n                    if (error) {\n                        return reduceCallback(error);\n                    }\n\n                    forklift.upload(path, remoteFolder + versionKey + \".\" + version.output, (error, url) => {\n\n                        if (error) {\n                            return reduceCallback(error);\n                        }\n\n                        uploaded[versionKey] = url;\n                        return reduceCallback(null, uploaded);\n                    });\n\n                });\n            });\n\n        }, (error, result) => {\n\n            if (error) {\n                return eachCallback(error);\n            }\n\n            instance[image.schemaKey] = result;\n            return eachCallback();\n        });\n\n    }, callback);\n};"]}