{"version":3,"sources":["../../../src/plugins/uploader/image_uploader.js"],"names":[],"mappings":"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","file":"image_uploader.js","sourcesContent":["/**\n *\n * Updated by uur on 12/01/16.\n */\n\n\"use strict\";\n\nconst Async = require(\"async\");\nconst Sharp = require(\"sharp\");\nconst Tmp = require(\"tmp\");\nconst Uuid = require(\"node-uuid\");\n\nmodule.exports = (forklift, instance, images, callback) => {\n\n    Async.each(images, (image, eachCallback) => {\n\n        const localFilePath = instance[image[\"schemaKey\"]][\"path\"];\n        const remoteFolder = `images/${image[\"schemaKey\"]}/${Uuid.v4()}-`;\n\n        Async.reduce(image.versions, {}, (uploaded, versionContainer, reduceCallback) => {\n\n            const versionKey = Object.keys(versionContainer)[0];\n            const version = versionContainer[versionKey];\n\n            const sharp = Sharp(localFilePath).resize(version.size[\"width\"], version.size[\"height\"]);\n            \n            if (!version.resize || version.resize == \"!\") {\n                sharp.ignoreAspectRatio();\n            }\n            else if (version.resize == \"^\") {\n\n            }\n            else if (version.resize == \">\" && (!version.size[\"width\"] || !version.size[\"height\"])) {\n                sharp.min();\n            }\n            else if (version.resize == \">\" && version.size[\"width\"] && version.size[\"height\"]) {\n                sharp.min();\n            }\n            else {\n                return reduceCallback(new Error(`${version.resize} is not valid for ${versionKey}:${image[\"schemaKey\"]}`))\n            }\n\n            if (!version.output || version.output == \"jpeg\" || version.output == \"jpg\") {\n                sharp.jpeg();\n\n                if (version.quality) {\n                    sharp.quality(version.quality);\n                }\n            }\n            else if (version.output == \"png\") {\n                sharp.png();\n            }\n            else {\n                return reduceCallback(new Error(`${version.output} is not valid for ${versionKey}:${image[\"schemaKey\"]}`))\n            }\n\n            sharp.progressive();\n            \n            Tmp.file({postfix: \".\" + version.output}, (error, path) => {\n\n                if (error) {\n                    return reduceCallback(error);\n                }\n\n                sharp.toFile(path, (error) => {\n\n                    if (error) {\n                        return reduceCallback(error);\n                    }\n\n                    forklift.upload(path, remoteFolder + versionKey + \".\" + version.output, (error, url) => {\n\n                        uploaded[versionKey] = url;\n                        return reduceCallback(null, uploaded);\n                    });\n\n                });\n            });\n\n        }, (error, result) => {\n\n            if (error) {\n                return eachCallback(error);\n            }\n\n            instance[image.schemaKey] = result;\n            return eachCallback();\n        });\n\n    }, callback);\n};"]}